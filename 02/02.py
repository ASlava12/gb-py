"""
2. Дан список:

['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
Необходимо его обработать — обособить каждое целое число кавычками и дополнить нулём до двух разрядов:
['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
Новый список не создавать! Сформировать из обработанного списка строку:
в "05" часов "17" минут температура воздуха была "+05" градусов
"""

""" # Мой комментарий 
Вполне возможно, в 3-е задание попала часть этого задания: 
    Подумать, какое условие записать, чтобы выявить числа среди элементов списка? Как модифицировать это условие для чисел со знаком?

Я решил положиться на обработку ошибок, если не сумел обработать интерпретатор - то это явно не целое число. 
Знак int обрабатывает, в строке 41 производится проверка на двухзначность числа.
"""

def is_int(number):
    """
    Проверяет - может ли строка быть конвертирована в число. Вернет True в случае успеха или False.
    """
    try:
        return int(number)
    except:
        return None

# Новый список lst не создавался
lst = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
result = ''

index = -1
while index < len(lst) - 1:
    index += 1
    num = is_int(lst[index])
    if num is not None:
        lst.insert(index,'"')
        lst.insert(index + 2,'"')

        index += 1
        if num // 10 == 0:
            lst[index] = '{}{}{}'.format(lst[index][:-1], '0', lst[index][-1])
        result += f'"{lst[index]}" '
        index += 1
    else:
        result += f'{lst[index]} '
        
print(f'Список: {lst}')
print(f'Результирующая строка: \'{result[:-1]}\'')