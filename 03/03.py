"""
3. Написать функцию thesaurus(), принимающую в качестве аргументов имена сотрудников и возвращающую словарь, в котором ключи — первые буквы имен, 
    а значения — списки, содержащие имена, начинающиеся с соответствующей буквы. Например:
>>> >>> thesaurus("Иван", "Мария", "Петр", "Илья")
{
    "И": ["Иван", "Илья"], 
    "М": ["Мария"], "П": ["Петр"]
}
Подумайте: полезен ли будет вам оператор распаковки? Сможете ли вы вернуть отсортированный по ключам словарь?
"""

def thesaurus(*args) -> dict:
    """
    Принимает в качестве аргументов имена сотрудников и возвращающую словарь, в котором ключи — первые буквы имен, 
    а значения — списки, содержащие имена, начинающиеся с соответствующей буквы.
    """
    result = dict()
    for arg in args:
        if arg[0] in result:
            result[arg[0]].append(arg)
        else:
            result[arg[0]] = [arg]
    return result

print(f'thesaurus("Иван", "Мария", "Петр", "Илья"): {thesaurus("Иван", "Мария", "Петр", "Илья")}')

"""
Сможете ли вы вернуть отсортированный по ключам словарь?

Словарь - неупорядоченная структура, отсортировать её смысла нет, т.к. данные будут возвращены в произвольном порядке. 
Можно получить список ключей словаря и отсортировать его. 
"""