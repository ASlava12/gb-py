"""
### Примечание! 

В задании допущена ошибка, вызов: 
>>> thesaurus_adv("Иван Сергеев", "Инна Серова", "Петр Алексеев", "Илья Иванов", "Анна Савельева")

вернет: 
{
    'С': {
        'И': ['Иван Сергеев', 'Инна Серова'], 
        'А': ['Анна Савельева']
    }, 
    'А': {
        'П': ['Петр Алексеев']
    }, 
    'И': {
        'И': ['Илья Иванов']
    }
}

4. * (вместо задачи 3) Написать функцию thesaurus_adv(), принимающую в качестве аргументов строки в формате «Имя Фамилия» и возвращающую словарь, 
    в котором ключи — первые буквы фамилий, а значения — словари, реализованные по схеме предыдущего задания и содержащие записи, 
    в которых фамилия начинается с соответствующей буквы. Например:
>>> >>> thesaurus_adv("Иван Сергеев", "Инна Серова", "Петр Алексеев", "Илья Иванов", "Анна Савельева")
{
    "А": {
        "П": "Петр Алексеев"
    }, 
    "С": {
        "И": ["Иван Сергеев", "Инна Серова"], 
        "А": ["Анна Савельева"]
    }
}
Сможете ли вы вернуть отсортированный по ключам словарь?

> Ответ был дан в задании 3.
"""

def thesaurus_adv(*args) -> dict:
    """
    Принимает в качестве аргументов имена сотрудников и возвращающую словарь, в котором ключи — первые буквы имен, 
    а значения — списки, содержащие имена, начинающиеся с соответствующей буквы.
    """
    result = dict()
    for arg in args:
        family_thirst = arg[arg.find(' ') + 1]
        if family_thirst not in result:
            result[family_thirst] = dict()

        if arg[0] in result[family_thirst]:
            result[family_thirst][arg[0]].append(arg)
        else:
            result[family_thirst][arg[0]] = [arg]

    return result

print(f'thesaurus_adv("Иван Сергеев", "Инна Серова", "Петр Алексеев", "Илья Иванов", "Анна Савельева"): {thesaurus_adv("Иван Сергеев", "Инна Серова", "Петр Алексеев", "Илья Иванов", "Анна Савельева")}')