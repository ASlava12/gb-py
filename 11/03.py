"""
3. Создайте собственный класс-исключение, который должен проверять содержимое 
    списка на наличие только чисел. Проверить работу исключения на реальном примере. 
Запрашивать у пользователя данные и заполнять список необходимо только числами. 
Класс-исключение должен контролировать типы данных элементов списка.

Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, 
    пока пользователь сам не остановит работу скрипта, введя, например, команду «stop». 
    При этом скрипт завершается, сформированный список с числами выводится на экран.
Подсказка: для этого задания примем, что пользователь может вводить только числа и строки. 
Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента. 
Вносить его в список, только если введено число. Класс-исключение должен не позволить 
    пользователю ввести текст (не число) и отобразить соответствующее сообщение. 

При этом работа скрипта не должна завершаться.
"""

END_OF_LINE = '\n'
NEW_LINE = '\n\t'

def array_to_string(array):
    return f"{END_OF_LINE}[{NEW_LINE}{NEW_LINE.join(f'{str(l)},' for l in array)}{END_OF_LINE}]{END_OF_LINE}"

class ListNumberError(Exception):
    def __init__(self, element: str):
        super().__init__(
            f"В массиве указан неверный элемент. Должно указываться число, а получено: '{element}'"
        )

try:
    print("Тестируем исключение")
    raise ListNumberError([1,2,3,4,"erse"])
except ListNumberError as ln:
    print(ln)

print("\nНачало основной программы.\nВведите пустую строку для формирования массива и вывода его на экран. \nВвод exit завершит работу скрипта.")
user_data = 1


while user_data != "exit":
    array_of_number = []
    user_data = 1
    while user_data != "" and user_data != "exit":
        try:
            try:
                user_data = input(">> ")
                array_of_number.append(int(user_data))
            except ValueError as ve:
                raise ListNumberError(user_data)
        except ListNumberError as lne:
            print(lne)
    print("\nВывод итогового массива:", array_to_string(array_of_number), sep='\n')


"""
slava@slava-Modern-15-A10M:~/MEGA/projects/geekbrains/gb-py/11$ python3.8 03.py 
Тестируем исключение
В массиве указан неверный элемент. Должно указываться число, а получено: '[1, 2, 3, 4, 'erse']'

Начало основной программы.
Введите пустую строку для формирования массива и вывода его на экран. 
Ввод exit завершит работу скрипта.
>> 1
>> 2
>> 3
>> 
В массиве указан неверный элемент. Должно указываться число, а получено: ''

Вывод итогового массива:

[
        1,
        2,
        3,
]

>> 3
>> 4
>> 5
>> 
В массиве указан неверный элемент. Должно указываться число, а получено: ''

Вывод итогового массива:

[
        3,
        4,
        5,
]

>> exit
В массиве указан неверный элемент. Должно указываться число, а получено: 'exit'

Вывод итогового массива:

[

]

slava@slava-Modern-15-A10M:~/MEGA/projects/geekbrains/gb-py/11$ 
"""
